% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/markov.R
\name{markov}
\alias{markov}
\alias{rate_markov}
\alias{rank_markov}
\title{Markov method}
\usage{
rate_markov(cr_data, h2h_fun, players = NULL, transpose = FALSE,
  self_play = NULL, stoch_modify = teleport(0.15), weights = 1,
  force_nonneg_h2h = TRUE, ...)

rank_markov(cr_data, h2h_fun, players = NULL, transpose = FALSE,
  self_play = NULL, stoch_modify = teleport(0.15), weights = 1,
  force_nonneg_h2h = TRUE, ties = c("average", "first", "last", "random",
  "max", "min"), round_digits = 7, ...)
}
\arguments{
\item{cr_data}{Competition results in format ready for
\code{\link[=results-longcr]{to_longcr}}.}

\item{h2h_fun}{A single Head-to-Head function or a list of them (see
Details).}

\item{players}{Vector of players for which rating is computed.}

\item{transpose}{Logical vector: whether to transpose Head-to-Head matrix for
the respective \code{h2h_fun}.}

\item{self_play}{NULL, numeric vector or list of them: how to modify
Head-to-Head values for self-play matchups (see \code{\link{get_h2h}}).}

\item{stoch_modify}{A single function to modify stochastic matrix or a list
of them (see \link[=stoch-modifiers]{Stochastic matrix modifiers}).}

\item{weights}{Weights for different stochastic matrices.}

\item{force_nonneg_h2h}{Whether to force nonnegative values in Head-to-Head
matrix.}

\item{...}{Additional arguments to be passed to methods.}

\item{ties}{Value for \code{ties} in \code{\link{round_rank}}.}

\item{round_digits}{Value for \code{round_digits} in
\code{\link{round_rank}}.}
}
\value{
\code{rate_markov} returns a named vector of the Markov rating. The
  sum of all ratings should be equal to 1.

  \code{rank_markov} returns a named vector of
  \link[=rating-ranking]{ranking} using \code{\link{round_rank}}.
}
\description{
Functions to compute rating and ranking using Markov method.
}
\details{
Markov ratings are based on players 'voting' for other players being
better. Algorithm is as follows:
\enumerate{
  \item 'Voting' is done with \link[=head-to-head]{Head-to-Head} values via
    \code{h2h_fun}: the more Head-to-Head value the more votes gets player2
    from player1. One can use \code{transpose} to transpose resulting
    Head-to-Head matrix, \code{self_play} to modify values for self-play
    matchups and \code{force_nonneg_h2h} to force nonnegative values.
    \bold{Note} that Head-to-Head values should be non-negative;
  \item Head-to-Head matrix is normalized to be stochastic (sum of
    rows should be equal to 1) Markov matrix \emph{S};
  \item \emph{S} is modified with \code{stoch_modify} to deal with possible
    problems behind \emph{S}, such as reducibility and rows with all 0;
  \item Stationary vector is computed based on \emph{S} as probability
    transition matrix of Markov chain process. The result is declared as
    Markov ratings.
}

Considering common values and structure of stochastic matrices one can
naturally combine different 'votings' in one stochastic matrix:
\enumerate{
  \item Different Head-to-Head matrices are computed with \code{h2h_fun}
    (which in this case should be a list of Head-to-Head functions) and
    optional parameters to \code{get_h2h};
  \item Each matrix is normalized to stochastic;
  \item Each stochastic matrix is modified with respective modifier which is
    stored in \code{stoch_modify} (which can be a list of functions);
  \item The resulting stochastic matrix is computed as weighted average of
    modified stochastic matrices.
}

For arguments \code{h2h_fun}, \code{transpose}, \code{self_play} and
\code{stoch_modify} general R recycling rule is applied. If \code{h2h_fun} or
\code{stoch_modify} is function it is transformed to list with one function.
If \code{self_play} is not list it is transformed to list with one element.

\code{weights} is recycled to the maximum length of three mentioned recycled
arguments and then is normalized to sum to 1.
}
\examples{
rate_markov(
  cr_data = ncaa2005,
  h2h_fun = h2h_num_wins,
  stoch_modify = vote_equal
)
rank_markov(
  cr_data = ncaa2005,
  h2h_fun = h2h_num_wins,
  stoch_modify = vote_equal
)

rate_markov(
  cr_data = ncaa2005,
  h2h_fun = list(h2h_num_wins, h2h_mean_score_diff_pos),
  stoch_modify = teleport(0.15),
  weights = c(0.3, 0.7)
)

}
\references{
\href{https://en.wikipedia.org/wiki/Markov_chain}{Wikipedia
  page} for Markov chain.
}
